
plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'maven-publish'
}
apply from: "$rootDir/scripts/maven-publish-pomfile-generation.gradle"

group = 'com.github.suiiide'
version = '1.5'


android {
    compileSdkVersion 29

    compileOptions {
        kotlinOptions.freeCompilerArgs += ['-module-name', "bottomsheet.imagepicker"]
    }

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 29
    }
    compileOptions {
        targetCompatibility = JavaVersion.VERSION_1_8
        sourceCompatibility = JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
//    libraryVariants.all { variant ->
//        variant.outputs.each { output ->
//            def outputFile = output.outputFile
//            if (outputFile != null && outputFile.name.endsWith('.aar')) {
//                def fileName = getArtifactFileName()
//                output.outputFile = new File(outputFile.parent, fileName)
//            }
//        }
//    }

}

ext {
    glide = '4.10.0'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'com.google.android.material:material:1.1.0-rc02'

    implementation 'com.kroegerama:android-kaiteki:2.9.1'
    implementation 'com.kroegerama:recyclerview-kaiteki:1.0.10'

    implementation("com.github.bumptech.glide:glide:$glide") {
        exclude group: "com.android.support"
    }
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"
}


    publishing {
        publications {
            // Creates a Maven publication called "release".
            maven(MavenPublication) {

                from components.findByName('release')
                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = VERSION_NAME
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')

                    //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                    configurations.implementation.allDependencies.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }


            }
        }
    }
def getArtifactFileName() {
    return "${POM_ARTIFACT_ID}-${VERSION_NAME}.aar"
}